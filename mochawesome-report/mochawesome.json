{
  "stats": {
    "suites": 4,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-07-30T04:22:50.939Z",
    "end": "2025-07-30T04:23:31.243Z",
    "duration": 40304,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f2ce10b7-8843-4893-b3ce-40a6f1b12a3b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f3b248bd-450d-4960-9141-0871eaa80723",
          "title": "Login",
          "fullFile": "/home/guest/Desktop/projetos/banco-api-tests/test/login.test.js",
          "file": "/test/login.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fd311abf-f7fc-4382-b8b4-4cbe8ea6a8a5",
              "title": "POST/login",
              "fullFile": "/home/guest/Desktop/projetos/banco-api-tests/test/login.test.js",
              "file": "/test/login.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar 200 com um token em string quando usar credenciais validas",
                  "fullTitle": "Login POST/login Deve retornar 200 com um token em string quando usar credenciais validas",
                  "timedOut": false,
                  "duration": 8046,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaLogin = await request(process.env.BASE_URL)\n                    .post('/login')\n                    .set('Content-Type', 'application/json')\n                    .send({\n                        'username': 'julio.lima',\n                        'senha':  '123456'\n                     }); \n                    \n                    expect(respostaLogin.status).to.equal(200);\n                    expect(respostaLogin.body.token).to.be.a('string');",
                  "err": {},
                  "uuid": "816a6f07-5369-4c5e-a115-d5e5f7af0cb1",
                  "parentUUID": "fd311abf-f7fc-4382-b8b4-4cbe8ea6a8a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "816a6f07-5369-4c5e-a115-d5e5f7af0cb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8046,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "687e2e51-2664-4ff1-aac3-d41527707930",
          "title": "Transferencias",
          "fullFile": "/home/guest/Desktop/projetos/banco-api-tests/test/tranferencia.test.js",
          "file": "/test/tranferencia.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0ca1e541-05eb-4a75-ba58-6a10f4256be6",
              "title": "POST /transferencias",
              "fullFile": "/home/guest/Desktop/projetos/banco-api-tests/test/tranferencia.test.js",
              "file": "/test/tranferencia.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve retornar sucesso com 201 quando o valor for igual ou acima de 10,00",
                  "fullTitle": "Transferencias POST /transferencias Deve retornar sucesso com 201 quando o valor for igual ou acima de 10,00",
                  "timedOut": false,
                  "duration": 16124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = await obterToken('julio.lima', '123456');\n      const resposta = await request(process.env.BASE_URL)\n        .post('/transferencias')\n        .set('Content-Type','application/json')\n        .set('Authorization',`Bearer ${token}`)\n        .send({\n          contaOrigem: 1,\n          contaDestino: 2,\n          valor: 11,\n          token: ''\n        });\n      \n      expect(resposta.status).to.equal(201);",
                  "err": {},
                  "uuid": "b958d90f-da99-4ea8-a88a-9ac2ddbb4981",
                  "parentUUID": "0ca1e541-05eb-4a75-ba58-6a10f4256be6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve retornar erro com 422 quando o valor da transferência for abaixo de 10,00",
                  "fullTitle": "Transferencias POST /transferencias Deve retornar erro com 422 quando o valor da transferência for abaixo de 10,00",
                  "timedOut": false,
                  "duration": 16131,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const token = await obterToken('julio.lima', '123456');\n            const resposta = await request(process.env.BASE_URL)\n        .post('/transferencias')\n        .set('Content-Type','application/json')\n        .set('Authorization',`Bearer ${token}`)\n        .send({\n          contaOrigem: 1,\n          contaDestino: 2,\n          valor: 7,\n          token: ''\n        });\n      expect(resposta.status).to.equal(422);",
                  "err": {},
                  "uuid": "37261812-5772-445b-a11d-16b1449fb70e",
                  "parentUUID": "0ca1e541-05eb-4a75-ba58-6a10f4256be6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b958d90f-da99-4ea8-a88a-9ac2ddbb4981",
                "37261812-5772-445b-a11d-16b1449fb70e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32255,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}